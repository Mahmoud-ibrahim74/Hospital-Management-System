/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.management.system;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.*;
import static java.lang.System.in;
import javax.swing.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author 7oda
 */
public class receptionist extends javax.swing.JFrame {

    String s = "null";

    public receptionist() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        panel.setBackground(new Color(194, 142, 80, 20)); // to Opacity Jpanel 2
        table.setShowGrid(true);
        table.getTableHeader().setReorderingAllowed(false);
        search_id.hide();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        logout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        logout3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        panel = new javax.swing.JPanel();
        txt = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        panel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        city = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        show = new javax.swing.JToggleButton();
        password = new javax.swing.JPasswordField();
        jLabel16 = new javax.swing.JLabel();
        Qualifications = new javax.swing.JComboBox<>();
        home = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        photo = new javax.swing.JLabel();
        browse = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        search_id = new javax.swing.JTextField();
        display_data = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        getPath = new javax.swing.JTextField();
        reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADD Patient");
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1230, 700));
        getContentPane().setLayout(null);

        kGradientPanel1.setkEndColor(new java.awt.Color(245, 194, 76));
        kGradientPanel1.setkStartColor(new java.awt.Color(204, 204, 255));
        kGradientPanel1.setLayout(null);

        logout.setBackground(new java.awt.Color(255, 255, 255));
        logout.setFont(new java.awt.Font("Vrinda", 1, 14)); // NOI18N
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        logout.setToolTipText("Exit Program");
        logout.setBorder(null);
        logout.setContentAreaFilled(false);
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutMouseExited(evt);
            }
        });
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        kGradientPanel1.add(logout);
        logout.setBounds(1190, 10, 40, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/RECETIONISTDETAILS.png"))); // NOI18N
        kGradientPanel1.add(jLabel2);
        jLabel2.setBounds(50, 10, 150, 160);

        logout3.setBackground(new java.awt.Color(255, 255, 255));
        logout3.setFont(new java.awt.Font("Vrinda", 1, 14)); // NOI18N
        logout3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mini.png"))); // NOI18N
        logout3.setToolTipText("Minimize");
        logout3.setBorder(null);
        logout3.setContentAreaFilled(false);
        logout3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logout3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logout3MouseExited(evt);
            }
        });
        logout3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout3ActionPerformed(evt);
            }
        });
        kGradientPanel1.add(logout3);
        logout3.setBounds(1151, 11, 30, 30);

        jLabel5.setFont(new java.awt.Font("Serif", 3, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("RECEPTIONIST ID");
        kGradientPanel1.add(jLabel5);
        jLabel5.setBounds(230, 120, 320, 40);

        id.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        id.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        kGradientPanel1.add(id);
        id.setBounds(550, 120, 320, 34);

        panel.setBackground(new java.awt.Color(194, 142, 80));
        panel.setLayout(null);

        txt.setFont(new java.awt.Font("SansSerif", 3, 36)); // NOI18N
        txt.setForeground(new java.awt.Color(255, 255, 255));
        txt.setText("RECEPTIONIST DETAILS");
        panel.add(txt);
        txt.setBounds(20, 0, 480, 60);

        kGradientPanel1.add(panel);
        panel.setBounds(220, 20, 830, 70);

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        add.setText("ADD RECEPT");
        add.setToolTipText("");
        add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addMouseExited(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        kGradientPanel1.add(add);
        add.setBounds(20, 520, 210, 50);

        panel2.setBackground(new java.awt.Color(194, 142, 80));
        panel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panel2MouseClicked(evt);
            }
        });
        panel2.setLayout(null);

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Age");
        panel2.add(jLabel7);
        jLabel7.setBounds(390, 0, 35, 40);

        fname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fname.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel2.add(fname);
        fname.setBounds(150, 10, 160, 30);

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("City");
        panel2.add(jLabel6);
        jLabel6.setBounds(20, 160, 70, 30);

        lname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lname.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel2.add(lname);
        lname.setBounds(150, 60, 160, 30);

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Second Name");
        panel2.add(jLabel8);
        jLabel8.setBounds(20, 60, 130, 30);

        address.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        address.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel2.add(address);
        address.setBounds(150, 110, 160, 30);

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Address");
        panel2.add(jLabel9);
        jLabel9.setBounds(20, 110, 110, 30);

        city.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        city.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel2.add(city);
        city.setBounds(150, 160, 160, 30);

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("First Name");
        panel2.add(jLabel10);
        jLabel10.setBounds(20, 10, 95, 30);

        age.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        age.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel2.add(age);
        age.setBounds(510, 10, 160, 30);

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Password");
        panel2.add(jLabel12);
        jLabel12.setBounds(390, 210, 100, 40);

        gender.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " Select", " male", " female" }));
        gender.setBorder(null);
        panel2.add(gender);
        gender.setBounds(510, 60, 160, 40);

        jLabel13.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Qualifications");
        panel2.add(jLabel13);
        jLabel13.setBounds(380, 170, 130, 20);

        phone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        phone.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel2.add(phone);
        phone.setBounds(510, 110, 160, 30);

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Phone No.");
        panel2.add(jLabel14);
        jLabel14.setBounds(390, 110, 100, 30);

        username.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        username.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel2.add(username);
        username.setBounds(150, 210, 160, 30);

        jLabel15.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("username");
        panel2.add(jLabel15);
        jLabel15.setBounds(10, 210, 120, 40);

        show.setBackground(new java.awt.Color(255, 255, 255));
        show.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eye.gif"))); // NOI18N
        show.setToolTipText("show password");
        show.setBorder(null);
        show.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        show.setOpaque(true);
        show.setPreferredSize(new java.awt.Dimension(52, 30));
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });
        panel2.add(show);
        show.setBounds(720, 220, 30, 20);
        panel2.add(password);
        password.setBounds(510, 210, 250, 40);

        jLabel16.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Gender");
        panel2.add(jLabel16);
        jLabel16.setBounds(390, 60, 80, 30);

        Qualifications.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Qualifications.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " Select Qualifications", " high school diploma for receptionist", " Basic computer knowledge", " Must possess multi-task handling ability", " Microsoft office package", " Excellent written and vocal communication", " Some Qualifications", " All Qualifications" }));
        Qualifications.setBorder(null);
        panel2.add(Qualifications);
        Qualifications.setBounds(510, 160, 320, 40);

        kGradientPanel1.add(panel2);
        panel2.setBounds(50, 170, 840, 270);

        home.setBackground(new java.awt.Color(255, 255, 255));
        home.setFont(new java.awt.Font("Vrinda", 1, 14)); // NOI18N
        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hou.png"))); // NOI18N
        home.setToolTipText("Back to Home");
        home.setBorder(null);
        home.setContentAreaFilled(false);
        home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homeMouseExited(evt);
            }
        });
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        kGradientPanel1.add(home);
        home.setBounds(1090, 20, 40, 30);

        delete.setBackground(new java.awt.Color(255, 255, 255));
        delete.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/remove.png"))); // NOI18N
        delete.setText("Delete RECEPT");
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
        });
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        kGradientPanel1.add(delete);
        delete.setBounds(20, 580, 210, 50);

        update.setBackground(new java.awt.Color(255, 255, 255));
        update.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        update.setText("Update RECEPT");
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateMouseExited(evt);
            }
        });
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        kGradientPanel1.add(update);
        update.setBounds(20, 640, 210, 50);

        photo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        kGradientPanel1.add(photo);
        photo.setBounds(900, 120, 300, 260);

        browse.setBackground(new java.awt.Color(255, 255, 255));
        browse.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        browse.setText("Browse");
        browse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        browse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                browseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                browseMouseExited(evt);
            }
        });
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });
        kGradientPanel1.add(browse);
        browse.setBounds(900, 440, 140, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ser.gif"))); // NOI18N
        jLabel3.setToolTipText("Search in Doctor");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel3MouseReleased(evt);
            }
        });
        kGradientPanel1.add(jLabel3);
        jLabel3.setBounds(340, 450, 50, 40);

        search_id.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        search_id.setToolTipText("Search in Employee");
        search_id.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        search_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_idActionPerformed(evt);
            }
        });
        search_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_idKeyReleased(evt);
            }
        });
        kGradientPanel1.add(search_id);
        search_id.setBounds(400, 450, 470, 40);

        display_data.setBackground(new java.awt.Color(255, 255, 255));
        display_data.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        display_data.setText("Display Table");
        display_data.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        display_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                display_dataMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                display_dataMouseExited(evt);
            }
        });
        display_data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display_dataActionPerformed(evt);
            }
        });
        kGradientPanel1.add(display_data);
        display_data.setBounds(20, 460, 210, 50);

        table.setBackground(new java.awt.Color(194, 142, 80));
        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "fname", "lname", "address", "city", "age", "gender", "phone", "Qualifications", "username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setGridColor(new java.awt.Color(0, 0, 0));
        table.setRowHeight(30);
        table.setRowMargin(0);
        table.setSelectionBackground(new java.awt.Color(0, 0, 153));
        table.setSelectionForeground(new java.awt.Color(247, 241, 241));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);

        kGradientPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(250, 510, 970, 180);

        getPath.setEditable(false);
        getPath.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getPath.setForeground(new java.awt.Color(255, 255, 255));
        getPath.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getPath.setOpaque(false);
        kGradientPanel1.add(getPath);
        getPath.setBounds(900, 390, 300, 40);

        reset.setBackground(new java.awt.Color(255, 255, 255));
        reset.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        reset.setText("Reset");
        reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                resetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                resetMouseExited(evt);
            }
        });
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        kGradientPanel1.add(reset);
        reset.setBounds(1070, 440, 130, 50);

        getContentPane().add(kGradientPanel1);
        kGradientPanel1.setBounds(0, 0, 1240, 790);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

        String getID = id.getText();
        String getFname = fname.getText();
        String getLname = lname.getText();
        String getAge = age.getText();
        String getQualifications = Qualifications.getSelectedItem().toString();
        String getGender = gender.getSelectedItem().toString();
        String getPhone = phone.getText();
        String getAddress = address.getText();
        String getCity = city.getText();
        String getUsername = username.getText();
        String getPassword = password.getText();

        if (getID.isEmpty() || getFname.isEmpty() || getLname.isEmpty() || getAge.isEmpty() || getQualifications.isEmpty() || getGender.isEmpty() || getPhone.isEmpty() || getAddress.isEmpty() || getCity.isEmpty()) {
            Toolkit.getDefaultToolkit().beep();   // alert
            JOptionPane.showMessageDialog(this, "please Fill out Fileds   !!", "Failure", JOptionPane.ERROR_MESSAGE);

        }
        if (s == "null") {
            Toolkit.getDefaultToolkit().beep();   // alert
            JOptionPane.showMessageDialog(this, "Plaes insert New photo   !!", "Failure", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                String sqlStmt = "INSERT INTO `receptionist`(`id`, `fname`, `lname`, `address`, `city`, `age`, `gender`, `phone`, `Qualifications`, `username`, `password`, `image`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement stmt = con.prepareStatement(sqlStmt);
                InputStream Is = new FileInputStream(new File(s));
                stmt.setString(1, getID);
                stmt.setString(2, getFname);
                stmt.setString(3, getLname);
                stmt.setString(4, getAddress);
                stmt.setString(5, getCity);
                stmt.setString(6, getAge);
                stmt.setString(7, getGender);
                stmt.setString(8, getPhone);
                stmt.setString(9, getQualifications);
                stmt.setString(10, getUsername);
                stmt.setString(11, getPassword);
                stmt.setBlob(12, Is);
                stmt.execute();

                JOptionPane.showMessageDialog(this, "Your Record is added sucessfully :)");
                resetData();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Failure", JOptionPane.ERROR_MESSAGE);

            } catch (FileNotFoundException ex) {

                JOptionPane.showMessageDialog(this, ex.getMessage(), "Failure", JOptionPane.ERROR_MESSAGE);

            }

        }
    }//GEN-LAST:event_addActionPerformed

    private void addMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseExited
        add.setBackground(Color.WHITE);
    }//GEN-LAST:event_addMouseExited

    private void addMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseEntered
        add.setBackground(Color.ORANGE);
    }//GEN-LAST:event_addMouseEntered

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        this.hide();
        new admin_control().setVisible(true);
    }//GEN-LAST:event_homeActionPerformed

    private void homeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseExited
        // TODO add your handling code here:
        home.setBackground(Color.WHITE);
    }//GEN-LAST:event_homeMouseExited

    private void homeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseEntered
        // TODO add your handling code here:
        home.setBackground(Color.ORANGE);
    }//GEN-LAST:event_homeMouseEntered

    private void logout3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout3ActionPerformed
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_logout3ActionPerformed

    private void logout3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logout3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_logout3MouseExited

    private void logout3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logout3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_logout3MouseEntered

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_logoutActionPerformed

    private void logoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_logoutMouseExited

    private void logoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutMouseEntered

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        // TODO add your handling code here:
        delete.setBackground(Color.ORANGE);
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        // TODO add your handling code here:
        delete.setBackground(Color.WHITE);
    }//GEN-LAST:event_deleteMouseExited

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        String getID = id.getText();

        if (getID.isEmpty()) {
            Toolkit.getDefaultToolkit().beep();   // alert

            JOptionPane.showMessageDialog(this, "Please Insert your ID !!", "Failure", JOptionPane.ERROR_MESSAGE);

        } else {

            try {

                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                String sqlStmt = "DELETE FROM `receptionist` WHERE id = '" + getID + "'";
                PreparedStatement stmt = con.prepareStatement(sqlStmt);
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Your ID = " + getID + "  is deleted sucessfully :)");
                resetData();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Failure", JOptionPane.ERROR_MESSAGE);

            }

        }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseEntered
        // TODO add your handling code here:
        update.setBackground(Color.YELLOW);
    }//GEN-LAST:event_updateMouseEntered

    private void updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseExited
        // TODO add your handling code here:
        update.setBackground(Color.WHITE);
    }//GEN-LAST:event_updateMouseExited

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        String getID = id.getText();
        String getFname = fname.getText();
        String getLname = lname.getText();
        String getAge = age.getText();
        String getQualifications = Qualifications.getSelectedItem().toString();
        String getGender = gender.getSelectedItem().toString();
        String getPhone = phone.getText();
        String getAddress = address.getText();
        String getCity = city.getText();
        String getUsername = username.getText();
        String getPassword = password.getText();

        if (getID.isEmpty()) {
            Toolkit.getDefaultToolkit().beep();   // alert

            JOptionPane.showMessageDialog(this, "Please Insert your ID !!", "Failure", JOptionPane.ERROR_MESSAGE);

        } else {

            try {

                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                String sqlStmt = "UPDATE `receptionist` SET `fname`='" + getFname + "',`lname`='" + getLname + "',`address`='" + getAddress + "',`city`='" + getCity + "',`age`='" + getAge + "',`gender`='" + getGender + "',`phone`='" + getPhone + "',`Qualifications`='" + getQualifications + "' ,`username`='" + getUsername + "',`password`='" + getPassword + "'WHERE id='" + getID + "'";
                PreparedStatement stmt = con.prepareStatement(sqlStmt);
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Your Record = " + getID + "  is Updated sucessfully :)");
                resetData();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Failure", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_updateActionPerformed

    private void browseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browseMouseEntered
        // TODO add your handling code here:
        browse.setBackground(Color.ORANGE);
    }//GEN-LAST:event_browseMouseEntered

    private void browseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browseMouseExited
        // TODO add your handling code here:
        browse.setBackground(Color.WHITE);
    }//GEN-LAST:event_browseMouseExited

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        // TODO add your handling code here:
        JFileChooser choose = new JFileChooser();
        choose.showOpenDialog(this);
        File f = choose.getSelectedFile();

        photo.setIcon(new ImageIcon(f.toString()));
        String path = f.getAbsolutePath();
        s = path;
        getPath.setText(path);
    }//GEN-LAST:event_browseActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        search_id.show();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseReleased
        search_id.hide();
        search_id.setText("");
    }//GEN-LAST:event_jLabel3MouseReleased

    private void search_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_idActionPerformed

    private void search_idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_idKeyReleased
        DefaultTableModel dm = (DefaultTableModel) table.getModel();
        String search = search_id.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(dm);
        table.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_search_idKeyReleased

    private void display_dataMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_display_dataMouseEntered
        // TODO add your handling code here:
        display_data.setBackground(Color.ORANGE);
    }//GEN-LAST:event_display_dataMouseEntered

    private void display_dataMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_display_dataMouseExited
        // TODO add your handling code here:
        display_data.setBackground(Color.WHITE);
    }//GEN-LAST:event_display_dataMouseExited

    private void display_dataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display_dataActionPerformed
        // TODO add your handling code here:

        try {

            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
            String sqlStmt = "SELECT `id`, `fname`, `lname`, `address`, `city`, `age`, `gender`, `phone`, `Qualifications`, `username`, `password` FROM `receptionist`";
            PreparedStatement stmt = con.prepareStatement(sqlStmt);
            ResultSet rs = stmt.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs)); // to show data from db to jtable by (rs2xml) jar
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Failure", JOptionPane.ERROR_MESSAGE);

        }
        System.out.println(s);
    }//GEN-LAST:event_display_dataActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
        char c = '•';
        if (show.isSelected()) {
            password.setEchoChar((char) 0);
        } else {
            password.setEchoChar(c);

        }
    }//GEN-LAST:event_showActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        showData();
        int select = -1;  // if user doesn't select any row
        select = table.getSelectedRow();  // get number of selected row

        if (select >= 0) {
            try {
                String id = table.getValueAt(select, 0).toString(); // get id from jtable
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                String sqlStmt = "SELECT `image` FROM `receptionist` WHERE id = '" + id + "'";
                PreparedStatement stmt = con.prepareStatement(sqlStmt);
                ResultSet rs = stmt.executeQuery();
                if (rs.next()) {
                    BufferedImage im = ImageIO.read(rs.getBinaryStream("image")); // to to retrieve image from database  in jlabel
                    photo.setIcon(new ImageIcon(im));
                } else {
                    Toolkit.getDefaultToolkit().beep();   // alert
                    JOptionPane.showMessageDialog(this, "No photo to show it !!", "Failure", JOptionPane.ERROR_MESSAGE);

                }

            } catch (SQLException ex) {
                Toolkit.getDefaultToolkit().beep();   // alert
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Failure", JOptionPane.ERROR_MESSAGE);

            } catch (IOException e) {
                Toolkit.getDefaultToolkit().beep();   // alert
                JOptionPane.showMessageDialog(this, e.getMessage(), "Failure", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            Toolkit.getDefaultToolkit().beep();   // alert
            JOptionPane.showMessageDialog(this, "Please Select Row !!", "Failure", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void panel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_panel2MouseClicked

    private void resetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseEntered
        reset.setBackground(Color.ORANGE);
    }//GEN-LAST:event_resetMouseEntered

    private void resetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseExited
        reset.setBackground(Color.WHITE);
    }//GEN-LAST:event_resetMouseExited

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        resetData();
    }//GEN-LAST:event_resetActionPerformed

    private void resetData() {
        Qualifications.setSelectedItem(" Select Qualifications");
        gender.setSelectedItem(" Select");
        fname.setText("");
        lname.setText("");
        age.setText("");
        phone.setText("");
        address.setText("");
        photo.setIcon(new ImageIcon());
        city.setText("");
        getPath.setText("");
        username.setText("");
        password.setText("");

    }

    private void showData() {

        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selected = table.getSelectedRow();
        if (selected >= 0) {
            id.setText(model.getValueAt(selected, 0).toString());
            fname.setText(model.getValueAt(selected, 1).toString());
            lname.setText(model.getValueAt(selected, 2).toString());
            address.setText(model.getValueAt(selected, 3).toString());
            city.setText(model.getValueAt(selected, 4).toString());
            age.setText(model.getValueAt(selected, 5).toString());
            gender.setSelectedItem((model.getValueAt(selected, 6).toString()));
            phone.setText(model.getValueAt(selected, 7).toString());
            Qualifications.setSelectedItem((model.getValueAt(selected, 8).toString()));
            username.setText(model.getValueAt(selected, 9).toString());
            password.setText(model.getValueAt(selected, 10).toString());

        } else {
            Toolkit.getDefaultToolkit().beep();   // alert
            JOptionPane.showMessageDialog(this, "Please Select row from Table to Display data !!", "Failure", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(receptionist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(receptionist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(receptionist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(receptionist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new receptionist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Qualifications;
    private javax.swing.JButton add;
    private javax.swing.JTextField address;
    private javax.swing.JTextField age;
    private javax.swing.JButton browse;
    private javax.swing.JTextField city;
    private javax.swing.JButton delete;
    private javax.swing.JButton display_data;
    private javax.swing.JTextField fname;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JTextField getPath;
    private javax.swing.JButton home;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JTextField lname;
    private javax.swing.JButton logout;
    private javax.swing.JButton logout3;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panel2;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField phone;
    private javax.swing.JLabel photo;
    private javax.swing.JButton reset;
    private javax.swing.JTextField search_id;
    private javax.swing.JToggleButton show;
    private javax.swing.JTable table;
    private javax.swing.JLabel txt;
    private javax.swing.JButton update;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
